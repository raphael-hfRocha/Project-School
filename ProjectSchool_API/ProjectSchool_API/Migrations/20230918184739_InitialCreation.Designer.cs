// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectSchool_API.Data;

namespace ProjectSchool_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230918184739_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113");

            modelBuilder.Entity("ProjectSchool_API.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DataNasc");

                    b.Property<string>("Nome");

                    b.Property<int>("ProfessorId");

                    b.Property<string>("Sobrenome");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Alunos");

                    b.HasData(
                        new { Id = 1, DataNasc = "01/01/2000", Nome = "Maria", ProfessorId = 1, Sobrenome = "José" },
                        new { Id = 2, DataNasc = "20/01/1980", Nome = "João", ProfessorId = 2, Sobrenome = "Paulo" },
                        new { Id = 3, DataNasc = "25/06/1981", Nome = "Alex", ProfessorId = 3, Sobrenome = "Ferraz" }
                    );
                });

            modelBuilder.Entity("ProjectSchool_API.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Professores");

                    b.HasData(
                        new { Id = 1, Nome = "Vinicius" },
                        new { Id = 2, Nome = "Paula" },
                        new { Id = 3, Nome = "Luna" }
                    );
                });

            modelBuilder.Entity("ProjectSchool_API.Models.Aluno", b =>
                {
                    b.HasOne("ProjectSchool_API.Models.Professor", "Professor")
                        .WithMany("Alunos")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
